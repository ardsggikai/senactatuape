#Autor: Allan Richard De Souza Gomes
#Data de criação: 26/05/2022
#Data de atualização: 29/05/2022
#Versão: 0.03

Etapa 1) Instale os pacotes do OpenSSH Server no Ubuntu 22.04|20.04
Vamos começar com o processo de instalação do servidor OpenSSH no Ubuntu 22.04|20.04. Mas primeiro, atualize a lista de pacotes do SO conforme configurado nos repositórios de fontes:

 sudo apt update

#Get:1 http://security.ubuntu.com/ubuntu jammy-security InRelease [90.7 kB]
#Hit:2 http://ke.archive.ubuntu.com/ubuntu jammy InRelease
#Get:3 http://ke.archive.ubuntu.com/ubuntu jammy-updates InRelease [90.7 kB]
#Get:4 http://ke.archive.ubuntu.com/ubuntu jammy-backports InRelease [90.7 kB]
#Fetched 272 kB in 2s (163 kB/s)
#Reading package lists... Done
#Building dependency tree... Done
#Reading state information... Done
#45 packages can be upgraded. Run 'apt list --upgradable' to see them.
#Thereafter, install OpenSSH Server packages on Ubuntu 22.04|20.04 using the commands below:

 sudo apt install openssh-server

Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  openssh-sftp-server runit-helper
Suggested packages:
  molly-guard monkeysphere ssh-askpass ufw
The following NEW packages will be installed:
  openssh-server openssh-sftp-server runit-helper
0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.
Need to get 446 kB of archives.
After this operation, 1,765 kB of additional disk space will be used.
Do you want to continue? [Y/n] y

Após a instalação do servidor OpenSSH, inicie o serviço ssh:

 sudo systemctl start ssh

Recomenda-se habilitar o serviço para iniciar com o SO. Isso garantirá que você não seja desconectado do sistema se o sistema for reinicializado.

 sudo systemctl enable ssh

Synchronizing state of ssh.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable ssh

O comando abaixo mostrará o status do serviço. Se tudo correu como esperado, deve estar em estado de execução.

 systemctl status ssh

● ssh.service - OpenBSD Secure Shell server
     Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)
     Active: active (running) since Sun 2022-05-29 05:47:03 -03; 2min 19s ago
       Docs: man:sshd(8)
             man:sshd_config(5)
   Main PID: 709 (sshd)
      Tasks: 1 (limit: 3447)
     Memory: 6.9M
        CPU: 34ms
     CGroup: /system.slice/ssh.service
             └─709 "sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups"

mai 29 05:47:03 wsardsg systemd[1]: Starting OpenBSD Secure Shell server...
mai 29 05:47:03 wsardsg sshd[709]: Server listening on 0.0.0.0 port 22.
mai 29 05:47:03 wsardsg sshd[709]: Server listening on :: port 22.
mai 29 05:47:03 wsardsg systemd[1]: Started OpenBSD Secure Shell server.
mai 29 05:49:05 wsardsg sshd[1426]: Accepted password for ardsg from 192.168.0.10 port 57217 ssh2
mai 29 05:49:05 wsardsg sshd[1426]: pam_unix(sshd:session): session opened for user ardsg(uid=1000) by (uid=0)

O arquivo de configuração do servidor OpenSSH é /etc/ssh/sshd_config. O arquivo contém pares palavra-chave-argumento, um por linha. Todas as linhas que começam com # e linhas vazias são interpretadas como comentários.

Etapa 2) Copie sua chave pública SSH da estação de trabalho para o sistema Ubuntu
Antes de desabilitar a autenticação de senha para SSH, você precisa copiar as chaves públicas SSH da estação de trabalho para o servidor ou para a máquina Ubuntu Desktop remota.

Gere chaves SSH se você ainda não as tiver no SO da estação de trabalho – o comando fornecido funciona para Linux e macOS:

 ssh-keygen
 
Gerando par de chaves rsa pública/privada.
Digite o arquivo no qual salvar a chave (/home/computingforgeeks/.ssh/id_rsa): 
Digite a senha (Deixe Vazio Para Deixar Sem Senha): 
Digite a senha Novamente: 
Your identification has been saved in /home/ardsg/.ssh/id_rsa
Your public key has been saved in /home/ardsg/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:sfO4ZWIZeJy7ljiF3jbnRd+hgPVR3BkCznwGMCcsbhM ardsg@wsardsg
The key's randomart image is:
+---[RSA 3072]----+
|        .+.+...o+|
|       E .B . oo.|
|      . +  = +   |
|       * +o + .  |
|      o.S. ... . |
|      ...B ......|
|     . +*.+ ... .|
|      +.**..     |
|       +o+.      |
+----[SHA256]-----+
Obtenha o endereço IP privado ou privado do sistema Ubuntu remoto:

 ip address

1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: enp0s3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 08:00:27:4a:de:1c brd ff:ff:ff:ff:ff:ff
    inet 192.168.0.76/24 metric 100 brd 192.168.0.255 scope global dynamic enp0s3
       valid_lft 86199sec preferred_lft 86199sec
    inet6 2804:14c:58:2546::1002/128 scope global dynamic noprefixroute
       valid_lft 3401sec preferred_lft 3401sec
    inet6 2804:14c:58:2546:a00:27ff:fe4a:de1c/64 scope global dynamic mngtmpaddr noprefixroute
       valid_lft 604780sec preferred_lft 518380sec
    inet6 fe80::a00:27ff:fe4a:de1c/64 scope link
       valid_lft forever preferred_lft forever

Meu endereço IP do servidor Ubuntu 22.04 é 172.16.2.20. Faça ping no endereço IP para confirmar a conectividade de rede da sua estação de trabalho:

 ping -c 3 172.16.2.20

PING 172.16.2.20 (172.16.2.20): 56 data bytes
64 bytes from 172.16.2.20: icmp_seq=0 ttl=63 time=188.575 ms
64 bytes from 172.16.2.20: icmp_seq=1 ttl=63 time=181.137 ms
64 bytes from 172.16.2.20: icmp_seq=2 ttl=63 time=192.178 ms

--- 172.16.2.20 ping statistics ---
3 packets transmitted, 3 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 181.137/187.297/192.178/4.597 ms
After confirming you can access remote Ubuntu server from your Workstation, copy SSH public key:

 ssh-copy-id ardsg@192.168.0.76

/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
Warning: Permanently added '172.16.2.20' (ECDSA) to the list of known hosts.
ardsg@192.168.0.76's password: <INPUT-LOGIN-USER-PASSWORD>

Number of key(s) added:        1

Agora tente fazer login na máquina, com: "ssh 'ardsg@192.168.0.76'"
e verifique se apenas a(s) chave(s) desejada(s) foi(são) adicionada(s).
Onde:

ubuntu é a conta de usuário remoto
172.16.2.20 is the IP address of remote Ubuntu system
Test SSH connectivity to remote Ubuntu system after copying SSH Pubkey. You should not be prompted for User Password, but maybe SSH private key keyphrase if it was set.

 ssh  ardsg@192.168.0.76

Warning: Permanently added '172.16.2.20' (ECDSA) to the list of known hosts.
Enter passphrase for key '/Users/jmutai/.ssh/id_rsa':
Welcome to Ubuntu Jammy Jellyfish (development branch) (GNU/Linux 5.13.0-19-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

45 updates can be applied immediately.
To see these additional updates run: apt list --upgradable

Your Hardware Enablement Stack (HWE) is supported until April 2025.
Last login: Thu Mai 27 13:55:16 2022 from 172.16.2.1

Desativando o SSH remoto para usuário root (opcional)
Para obter segurança aprimorada em seu sistema Ubuntu remoto, considere desabilitar o login ssh do usuário root.

No sistema Ubuntu remoto, edite o arquivo de configuração do servidor SSH e defina o parâmetro para desabilitar o acesso root através do ssh:

 sudo vim /etc/ssh/sshd_config

PermitRootLogin no
Há também uma opção de permitir que o usuário root se autentique com qualquer outro mecanismo permitido que não seja senha ou teclado interativo. Para este conjunto como abaixo:

PermitRootLogin prohibit-password

Com as configurações acima, poderemos fazer login como usuário root com a chave privada SSH. Somente essa chave pública SSH deve ter sido copiada para o sistema antes que o serviço do servidor SSH seja reiniciado:

 ssh-copy-id root@172.16.2.20

/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/Users/jmutai/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
Warning: Permanently added '92.168.200.46' (ECDSA) to the list of known hosts.
root@192.168.0.76's password:

Number of key(s) added:        1

Agora tente fazer login na máquina, com: "ssh 'root@192.168.0.76'"
e verifique se apenas a(s) chave(s) desejada(s) foi(são) adicionada(s).
Reinicie o serviço SSH para aplicar novas configurações no arquivo.

sudo systemctl restart ssh

systemctl status ssh

Desativando a autenticação de senha SSH (opcional)
A autenticação de senha no SSH pode ser totalmente desativada. A única maneira de fazer login por SSH será com o uso de chaves SSH.

Defina a palavra-chave PasswordAuthentication como no para impedir a autenticação de senha para todos os usuários:

 sudo vim /etc/ssh/sshd_config

PasswordAuthentication no

Reinicie o serviço SSH para que a nova alteração tenha efeito.

 sudo systemctl restart ssh

A autenticação SSH sem uma chave pública definitivamente falhará.

 ssh ardsg@192.168.0.76
ardsg@192.168.0.76: Permission denied (publickey).
When SSH Public key is not in the default ~/.ssh/id_rsa, use -i to pass manual path for the identity:

 ssh ardsg@192.168.0.76 -i /path/to/privkey
Conclusion