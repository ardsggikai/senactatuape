Passo 1 — Criando um banco de dados MySQL e usuário para WordPress
O primeiro passo é preparatório. O WordPress usa o MySQL para gerenciar e armazenar informações do site e do usuário. Você já tem o MySQL instalado, mas precisa criar um banco de dados e um usuário para o WordPress usar.

Para começar, faça login na conta root (administrativa) do MySQL emitindo o seguinte comando (observe que este não é o usuário root do seu servidor):

sudo mysql
Nota: Se você instalou o MySQL seguindo um tutorial diferente do listado nos pré-requisitos, você pode ter habilitado a autenticação de senha para seu usuário root do MySQL. Nesse caso, você pode se conectar ao MySQL com o seguinte comando:

mysql -u root -p
Dentro do banco de dados, crie um banco de dados dedicado para o WordPress controlar. Você pode chamar isso do que quiser, mas usaremos o nome wordpress neste guia. Crie o banco de dados para WordPress executando o seguinte comando:

CREATE DATABASE wordpress DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;
Nota: Cada instrução MySQL deve terminar em um ponto e vírgula (;). Verifique se isso está presente se você estiver enfrentando algum problema.

Em seguida, você criará uma conta de usuário MySQL separada que usará exclusivamente para operar seu novo banco de dados. A criação de bancos de dados e contas específicos pode ajudá-lo do ponto de vista de gerenciamento e segurança. Usaremos o nome wordpressuser neste guia, mas sinta-se à vontade para usar qualquer nome de sua preferência para esse uso.

Você pode criar esse usuário executando o comando a seguir. Lembre-se de escolher uma senha forte aqui para o usuário do banco de dados onde temos a senha:

CREATE USER 'wordpressuser'@'%' IDENTIFIED WITH mysql_native_password BY 'password';
Em seguida, informe ao banco de dados que seu usuário wordpress deve ter acesso completo ao banco de dados que você configurou:

GRANT ALL ON wordpress.* TO 'wordpressuser'@'%';
Agora você tem um banco de dados e uma conta de usuário, cada um feito especificamente para o WordPress. Você precisa liberar os privilégios para que a instância atual do MySQL saiba sobre as alterações recentes feitas:

FLUSH PRIVILEGES;
Saia do MySQL escrevendo o seguinte:

EXIT;
Na próxima etapa, você estabelecerá algumas bases para plugins do WordPress baixando extensões PHP para o seu servidor.

Passo 2 — Instalando Extensões PHP Adicionais
Ao configurar nossa pilha LAMP, exigimos apenas um conjunto mínimo de extensões para que o PHP se comunicasse com o MySQL. O WordPress e muitos de seus plugins, no entanto, aproveitam extensões PHP adicionais.

Você pode baixar e instalar algumas das extensões PHP mais populares para uso com o WordPress. Mas primeiro, use as ferramentas de gerenciamento de pacotes do APT para atualizar seu índice de pacotes local:

sudo apt update
Então você pode instalar as várias extensões PHP para WordPress:

sudo apt install php-curl php-gd php-mbstring php-xml php-xmlrpc php-soap php-intl php-zip -s

Isso estabelecerá as bases para a instalação de plugins adicionais em seu site WordPress.

Nota: Cada plugin do WordPress tem seu próprio conjunto de requisitos. Alguns podem exigir a instalação de pacotes PHP adicionais. Verifique a documentação do seu plug-in para descobrir seus requisitos de PHP. Se estiverem disponíveis, podem ser instalados com o apt como demonstrado no exemplo anterior.

Você precisará reiniciar o Apache para carregar essas novas extensões. Na próxima seção, você fará mais alguns ajustes na configuração do Apache, para poder esperar até lá ou reiniciar agora para concluir o processo de extensão do PHP:
sudo systemctl restart apache2

Depois de reiniciar, ou se optar por esperar, você pode continuar na próxima seção para começar a fazer ajustes na configuração do Apache.

Etapa 3 — Ajustando a configuração do Apache para permitir substituições e reescritas de .htaccess
Em seguida, você fará alguns pequenos ajustes na configuração do Apache. Com base nos tutoriais de pré-requisitos, você deve ter um arquivo de configuração para seu site no diretório /etc/apache2/sites-available/.

Neste guia, usaremos /etc/apache2/sites-available/wordpress.conf como exemplo, mas você deve substituir o caminho para o arquivo de configuração existente quando apropriado. Além disso, usaremos /var/www/wordpress como o diretório raiz de nossa instalação do WordPress. Você deve usar a raiz da web especificada em sua própria configuração. Se você seguiu nosso tutorial LAMP, pode ser seu nome de domínio em vez de wordpress em ambos os casos.

Com seus caminhos identificados, você pode passar a trabalhar com .htaccess para que o Apache possa lidar com as alterações de configuração por diretório.

Ativando substituições de .htaccess
Atualmente, o uso de arquivos .htaccess está desabilitado. O WordPress e muitos plugins do WordPress usam esses arquivos extensivamente para ajustes no diretório no comportamento do servidor web.

Abra o arquivo de configuração do Apache para seu site com seu editor de texto preferido. Aqui, usaremos o vim:

sudo vim /etc/apache2/sites-available/wordpress.conf
Para permitir arquivos .htaccess, você precisa definir a diretiva AllowOverride dentro de um bloco Directory apontando para a raiz do seu documento. Adicione o seguinte conteúdo dentro do bloco VirtualHost em seu arquivo de configuração, certificando-se de usar o diretório raiz da web correto:

/etc/apache2/sites-available/wordpress.conf
<VirtualHost *:80>
. . .
    <Directory /var/www/wordpress/>
        AllowOverride All
    </Directory>
. . .
</VirtualHost>
Quando terminar, salve e feche o arquivo. No vim, você pode fazer isso pressionando SHIFT e : juntos, depois x! e ENTER.

Habilitando o Módulo de Reescrita
Em seguida, você pode habilitar o mod_rewrite para poder usar o recurso de link permanente do WordPress:

sudo a2enmod rewrite
Isso permite que você tenha links permanentes mais legíveis para suas postagens, como os dois exemplos a seguir:

http://example.com/2012/post-name/
http://example.com/2012/12/30/post-name
O comando a2enmod chama um script que habilita o módulo especificado na configuração do Apache.

Habilitando as mudanças
Antes de implementar as alterações feitas, verifique se não cometeu nenhum erro de sintaxe executando o seguinte teste:

sudo apache2ctl configtest
Você pode receber saídas como as seguintes:

Output
AH00558: apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.1.1. Set the 'ServerName' directive globally to suppress this message
Syntax OK
Se você deseja suprimir a linha superior, adicione uma diretiva ServerName ao seu arquivo de configuração principal (global) do Apache em /etc/apache2/apache2.conf. O ServerName pode ser o domínio ou endereço IP do seu servidor. No entanto, esta é apenas uma mensagem de aviso e não afeta a funcionalidade do seu site. Desde que a saída contenha Sintaxe OK, você está pronto para continuar.

Reinicie o Apache para implementar as alterações. Certifique-se de reiniciar agora mesmo se você tiver reiniciado anteriormente neste tutorial:

sudo systemctl restart apache2
Em seguida, você baixará e configurará o próprio WordPress.

Passo 4 — Baixando o WordPress
Agora que o software do servidor está configurado, você pode baixar e configurar o WordPress. Por motivos de segurança, é sempre recomendável obter a versão mais recente do WordPress em seu site.

Primeiro, mude para um diretório gravável (recomendamos um temporário como /tmp):

cd /tmp
Em seguida, baixe a versão compactada com o seguinte comando curl:

curl -O https://wordpress.org/latest.tar.gz
Extraia o arquivo compactado para criar a estrutura de diretórios do WordPress:

tar xzvf latest.tar.gz
Você moverá esses arquivos para a raiz do documento momentaneamente. Antes de fazer isso, você pode adicionar um arquivo .htaccess fictício para que ele fique disponível para uso posterior do WordPress.

Crie o arquivo executando o seguinte:

touch /tmp/wordpress/.htaccess
Você também copiará o arquivo de configuração de amostra para o nome do arquivo que o WordPress lê:

cp /tmp/wordpress/wp-config-sample.php /tmp/wordpress/wp-config.php
Além disso, crie o diretório de atualização para que o WordPress não tenha problemas de permissão ao tentar fazer isso sozinho após uma atualização de seu software:

mkdir /tmp/wordpress/wp-content/upgrade
Agora você pode copiar todo o conteúdo do diretório para a raiz do documento. Estamos usando um ponto no final do nosso diretório de origem para indicar que tudo dentro do diretório deve ser copiado, incluindo arquivos ocultos (como o arquivo .htaccess que criamos). Certifique-se de substituir o diretório /var/www/wordpress pelo diretório que você configurou em seu servidor:

sudo cp -a /tmp/wordpress/. /var/www/wordpress
Agora você está pronto para configurar seu diretório WordPress.

Passo 5 — Configurando o diretório WordPress
Antes de iniciar a configuração do WordPress baseado na web, você precisa ajustar alguns itens em seu diretório do WordPress.
Ajustando a propriedade e as permissões
Outro passo importante é configurar permissões de arquivo razoáveis ​​e propriedade para os arquivos e diretórios que o WordPress usa para funcionar.

Comece dando a propriedade de todos os arquivos ao usuário e grupo www-data. Este é o usuário com o qual o servidor web Apache é executado, e o Apache precisará ler e gravar arquivos do WordPress para servir o site e realizar atualizações automáticas.

Atualize a propriedade com o comando chown que permite modificar a propriedade do arquivo. Certifique-se de apontar para o diretório relevante do seu servidor:

sudo chown -R www-data:www-data /var/www/wordpress
Em seguida, execute dois comandos find para definir as permissões corretas nos diretórios e arquivos do WordPress. Este primeiro comando find define todos os diretórios dentro do diretório /var/www/<>^wordpress<^> e define as permissões de cada um para 750:

sudo find /var/www/wordpress/ -type d -exec chmod 750 {} \;
Este encontra cada arquivo dentro do diretório e define suas permissões para 640:

sudo find /var/www/wordpress/ -type f -exec chmod 640 {} \;
Essas permissões devem fazer com que você trabalhe efetivamente com o WordPress, mas observe que alguns plugins e procedimentos podem exigir ajustes adicionais.

Configurando o arquivo de configuração do WordPress
Agora, você precisa fazer algumas alterações no arquivo de configuração principal do WordPress.

Ao abrir o arquivo, sua primeira tarefa será ajustar algumas chaves secretas para fornecer um nível de segurança para sua instalação. O WordPress fornece um gerador seguro para esses valores para que você não precise tentar encontrar bons valores por conta própria. Eles são usados ​​apenas internamente, portanto, não prejudicará a usabilidade ter valores complexos e seguros aqui.

Para obter valores seguros do gerador de chave secreta do WordPress, execute o seguinte:

curl -s https://api.wordpress.org/secret-key/1.1/salt/
Você receberá valores exclusivos que se assemelham a uma saída semelhante à seguinte:

Aviso! É importante que você solicite valores exclusivos a cada vez. NÃO copie os seguintes valores de exemplo!

Output
define('AUTH_KEY',         '84Ro{(NzWI ?$K![JvstHukpuu+2D0C.|ZN,<T[yQk&hnScH[i.%[=@OtKrr$c&r');
define('SECURE_AUTH_KEY',  ';8}}-pPLDl%ty$`i|.jnv.!5muG?+n7!`v[/%i=D->uiW3,`zeVk6{SK)5f:Ue~Y');
define('LOGGED_IN_KEY',    '+n]uBU&XXdpv1|CbAa;[o-w*SfCT~i0tir)3]<KwZFYKB ! g7 {PLZssf{QQ;yR');
define('NONCE_KEY',        'K.)!h:{itk6*()WRU`A5^a;~w9uRNHu+JzQ8a9KV8[MD1R@ QE@/ 9IM)>C>ne%Q');
define('AUTH_SALT',        '5J~4>((>`tZ_V.-v<Lio#TpV|rwqP;;d`P(kC?,sg!-0,9+.,WAF]-CijRfIkjb-');
define('SECURE_AUTH_SALT', 'lr6hEm ur-U-NF:|J+@B#<|,weriX-2bjlr~=L@Sz6xbM;|Xy-U ElP2+keU=#La');
define('LOGGED_IN_SALT',   'a~zd1+~L%$:]RxFB*z]~HX>)n/nnY6x!(Vca?Plv#++5+LCn5?:hVrU4+Zu_nxaI');
define('NONCE_SALT',       '+sFR+fUK,tgFTp.;^kLWxq767jz5o|D.bB7%S/dw-LRb=B-REcYl(J$.Y 4 ?UIv');
Estas são linhas de configuração que você pode colocar diretamente em seu arquivo de configuração para definir chaves seguras. Copie a saída que você recebeu agora.

Em seguida, abra o arquivo de configuração do WordPress:

sudo vim /var/www/wordpress/wp-config.php
Encontre a seção que contém os valores de exemplo para essas configurações:

/var/www/wordpress/wp-config.php
. . .

define('AUTH_KEY',         'put your unique phrase here');
define('SECURE_AUTH_KEY',  'put your unique phrase here');
define('LOGGED_IN_KEY',    'put your unique phrase here');
define('NONCE_KEY',        'put your unique phrase here');
define('AUTH_SALT',        'put your unique phrase here');
define('SECURE_AUTH_SALT', 'put your unique phrase here');
define('LOGGED_IN_SALT',   'put your unique phrase here');
define('NONCE_SALT',       'put your unique phrase here');

. . .
Exclua essas linhas e insira os valores que você copiou da linha de comando:

/var/www/wordpress/wp-config.php
. . .

define('AUTH_KEY',         'VALUES COPIED FROM THE COMMAND LINE');
define('SECURE_AUTH_KEY',  'VALUES COPIED FROM THE COMMAND LINE');
define('LOGGED_IN_KEY',    'VALUES COPIED FROM THE COMMAND LINE');
define('NONCE_KEY',        'VALUES COPIED FROM THE COMMAND LINE');
define('AUTH_SALT',        'VALUES COPIED FROM THE COMMAND LINE');
define('SECURE_AUTH_SALT', 'VALUES COPIED FROM THE COMMAND LINE');
define('LOGGED_IN_SALT',   'VALUES COPIED FROM THE COMMAND LINE');
define('NONCE_SALT',       'VALUES COPIED FROM THE COMMAND LINE');

. . .
Em seguida, você modificará algumas das configurações de conexão do banco de dados no início do arquivo. Você precisa ajustar o nome do banco de dados, o usuário do banco de dados e a senha associada que você configurou no MySQL.

A outra mudança que você precisa fazer é definir o método que o WordPress deve usar para gravar no sistema de arquivos. Como você deu permissão ao servidor web para escrever onde ele precisa, você pode definir explicitamente o método do sistema de arquivos como “direto”. A falha em definir isso com suas configurações atuais resultaria no WordPress solicitando credenciais de FTP ao executar algumas ações.

Essa configuração pode ser adicionada abaixo das configurações de conexão do banco de dados ou em qualquer outro lugar no arquivo:

/var/www/wordpress/wp-config.php
. . .

// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define( 'DB_NAME', 'wordpress' );

/** MySQL database username */
define( 'DB_USER', 'grupo2' );

/** MySQL database password */
define( 'DB_PASSWORD', '123@grupo2' );

/** MySQL hostname */
define( 'DB_HOST', 'localhost' );

/** Database Charset to use in creating database tables. */
define( 'DB_CHARSET', 'utf8' );

/** The Database Collate type. Don't change this if in doubt. */
define( 'DB_COLLATE', '' );


. . .

define('FS_METHOD', 'direct');
Salve e feche o arquivo quando terminar.

Passo 6 — Concluindo a instalação através da interface web
Agora que a configuração do servidor está concluída, você pode concluir a instalação por meio da interface da web.

No seu navegador da Web, navegue até o nome de domínio do seu servidor ou endereço IP público:

https://server_domain_or_IP/wp-admin